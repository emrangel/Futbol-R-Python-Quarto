---
title: My first Quarto Dashboard
format: 
  dashboard:
    css: style.css
---

# Page 1

## Row {.tabset}

### Graph with R
```{r}
#| echo: false
#| class: output 
library('rvest')
library('dplyr')
library('ggplot2')
library("ggrepel")
library("jsonlite")
library("SBpitch")
# install.packages("devtools")
# devtools::install_github("FCrSTATS/SBpitch")


url_stats_match = paste0('https://www.fotmob.com/api/matchDetails?matchId=',4205546) # url especific league and season
# https://www.fotmob.com/matches/real-madrid-vs-almeria/2tvf3g#4205546
stats_match <- fromJSON(url_stats_match)

shots = stats_match$content$shotmap$shots
teams = stats_match$header$teams %>% mutate(home_away = c(1,2))
hight = stats_match$content$matchFacts$highlights$image

shots = left_join(shots, teams, by = c("teamId"="id"))
# shots %>% head(2)

# shots$eventType

# summary(shots %>% select(x,y))

df_tiros = shots

logo_team1 = df_tiros %>% filter(home_away == 1 )%>% distinct(imageUrl)
gol_team1 <- df_tiros %>% filter(eventType == 'Goal' & home_away == 1)
no_gol_team1 <- df_tiros %>% filter(eventType != 'Goal' & home_away == 1)

logo_team2 = df_tiros %>% filter(home_away == 2)%>% distinct(imageUrl)
gol_team2 <- df_tiros %>% filter(eventType == 'Goal' & home_away == 2)
no_gol_team2 <- df_tiros %>% filter(eventType != 'Goal' & home_away == 2)

# Crear el gráfico
blank_pitch <- create_Pitch(
  goaltype = "box",
  grass_colour = "#202020", 
  line_colour = "#797876", 
  background_colour = "#202020", 
  goal_colour = "#131313"
)

# Dibujar el gráfico de puntos
blank_pitch + 
  geom_point(data = gol_team1, aes(x = 105 - x , y = y + 8 ),shape = "\U26BD",size = 4, color = "#94c7c3") +
  geom_point(data = no_gol_team1, aes(x = 105 - x , y = y + 8), color = "#eb9293", alpha = 0.6) +
  geom_point(data = gol_team2, aes(x = x + 15, y = y + 8),shape = "\U26BD",size = 4,  color = "#94c7c3") +
  geom_point(data = no_gol_team2, aes(x = x + 15, y = y + 8), color = "#eb9293", alpha = 0.6) +
  cowplot::draw_image(logo_team2$imageUrl, 
                x = 110, y = 1, width = 7.5, height = 7.5) +
  cowplot::draw_image(logo_team1$imageUrl, 
                      x = 105- 100, y = 1, width = 7.5, height = 7.5) +
  cowplot::draw_image(hight, 
                      x = 40, y = -10, width = 40, height = 50)
```
```{{r}, class output:}

library('rvest')
library('dplyr')
library('ggplot2')
library("ggrepel")
library("jsonlite")
library(SBpitch)


url_stats_match = paste0('https://www.fotmob.com/api/matchDetails?matchId=',4205546) # url especific league and season
# https://www.fotmob.com/matches/real-madrid-vs-almeria/2tvf3g#4205546
stats_match <- fromJSON(url_stats_match)

shots = stats_match$content$shotmap$shots
teams = stats_match$header$teams %>% mutate(home_away = c(1,2))
hight = stats_match$content$matchFacts$highlights$image

shots = left_join(shots, teams, by = c("teamId"="id"))
# shots %>% head(2)

# shots$eventType

# summary(shots %>% select(x,y))

df_tiros = shots

logo_team1 = df_tiros %>% filter(home_away == 1 )%>% distinct(imageUrl)
gol_team1 <- df_tiros %>% filter(eventType == 'Goal' & home_away == 1)
no_gol_team1 <- df_tiros %>% filter(eventType != 'Goal' & home_away == 1)

logo_team2 = df_tiros %>% filter(home_away == 2)%>% distinct(imageUrl)
gol_team2 <- df_tiros %>% filter(eventType == 'Goal' & home_away == 2)
no_gol_team2 <- df_tiros %>% filter(eventType != 'Goal' & home_away == 2)

# Crear el gráfico
blank_pitch <- create_Pitch(
  goaltype = "box",
  grass_colour = "#202020", 
  line_colour = "#797876", 
  background_colour = "#202020", 
  goal_colour = "#131313"
)

# Dibujar el gráfico de puntos
blank_pitch + 
  geom_point(data = gol_team1, aes(x = 105 - x , y = y + 8 ),shape = "\U26BD",size = 4, color = "#94c7c3") +
  geom_point(data = no_gol_team1, aes(x = 105 - x , y = y + 8), color = "#eb9293", alpha = 0.6) +
  geom_point(data = gol_team2, aes(x = x + 15, y = y + 8),shape = "\U26BD",size = 4,  color = "#94c7c3") +
  geom_point(data = no_gol_team2, aes(x = x + 15, y = y + 8), color = "#eb9293", alpha = 0.6) +
  cowplot::draw_image(logo_team2$imageUrl, 
                x = 110, y = 1, width = 7.5, height = 7.5) +
  cowplot::draw_image(logo_team1$imageUrl, 
                      x = 105- 100, y = 1, width = 7.5, height = 7.5) +
  cowplot::draw_image(hight, 
                      x = 40, y = -10, width = 40, height = 50)
```

### Graph with python

```{python}
#| echo: false
#| class: output

import requests
import json
import pandas as pd
from bs4 import BeautifulSoup
import matplotlib.image as mpimg
from mplsoccer import Pitch
import matplotlib.pyplot as plt
import numpy as np
import urllib.request
import PIL

# libraries to graph
from mplsoccer import Pitch
import matplotlib.pyplot as plt

url = "https://www.fotmob.com/api/matchDetails?matchId=4205546"

response = requests.request("GET", url)
json_fotmob = response.json()

#print(response.text)

df_teams = pd.DataFrame(json_fotmob['header']['teams'])
df_teams['home_way'] = [1,2]
df_tiros = pd.DataFrame(json_fotmob['content']['shotmap']['shots'])
df_tiros = pd.merge(df_tiros, df_teams, how='left', left_on='teamId', right_on='id')

logo_team1 = df_tiros[df_tiros['home_way'] == 1]['imageUrl'].unique()
gol_team1 = df_tiros[(df_tiros['eventType'] == 'Goal') & (df_tiros['home_way'] == 1)]
no_gol_team1 = df_tiros[df_tiros['eventType'] != 'Goal'][df_tiros.home_way == 1]

logo_team2 = df_tiros[df_tiros['home_way'] == 2]['imageUrl'].unique()
gol_team2 = df_tiros[(df_tiros['eventType'] == 'Goal') & (df_tiros['home_way'] == 2)]
no_gol_team2 = df_tiros[df_tiros['eventType'] != 'Goal']

fig, ax = plt.subplots(figsize = (30,14))
pitch = Pitch(pitch_type='custom',pitch_length=105, pitch_width=68)
pitch.draw(ax=ax)

fig = pitch.scatter(105 - gol_team1.x, 68 - gol_team1.y, ax=ax, marker='football')
fig = pitch.scatter(105 - no_gol_team1.x, 68 - no_gol_team1.y, ax=ax, alpha = 0.6)
fig = pitch.scatter(gol_team2.x, gol_team2.y, ax=ax, marker='football')
fig = pitch.scatter(no_gol_team2.x, no_gol_team2.y, ax=ax, alpha = 0.6)

#pitch.scatter(gol_team2.x, no_gol_team2.y, ax=ax, alpha=.6)

logo_team1_url = urllib.request.urlretrieve(logo_team1[0], "images/"+ df_teams.iloc[0, 0]+".png")
logo_team1_url =  df_teams.iloc[0, 0]+".png"
img = PIL.Image.open("images/" + logo_team1_url)
# Mostrar el logo del equipo 1 en el gráfico
fig = ax.imshow(img, extent=[0, 20, 0, 20], alpha=0.5)

logo_team2_url = urllib.request.urlretrieve(logo_team2[0], "images/"+ df_teams.iloc[1, 0]+".png")
logo_team2_url =  df_teams.iloc[1, 0]+".png"
img2 = PIL.Image.open("images/" + logo_team2_url)
# Mostrar el logo del equipo 1 en el gráfico
fig = ax.imshow(img2, extent=[80, 100, 0, 20], alpha=0.5)
plt.show()
```
```{{python}, class output: }

import requests
import json
import pandas as pd
from bs4 import BeautifulSoup
import matplotlib.image as mpimg
from mplsoccer import Pitch
import matplotlib.pyplot as plt
import numpy as np
import urllib.request
import PIL

# libraries to graph
from mplsoccer import Pitch
import matplotlib.pyplot as plt

url = "https://www.fotmob.com/api/matchDetails?matchId=4270636"

response = requests.request("GET", url)
json_fotmob = response.json()

#print(response.text)

df_teams = pd.DataFrame(json_fotmob['header']['teams'])
df_teams['home_way'] = [1,2]
df_tiros = pd.DataFrame(json_fotmob['content']['shotmap']['shots'])
df_tiros = pd.merge(df_tiros, df_teams, how='left', left_on='teamId', right_on='id')

logo_team1 = df_tiros[df_tiros['home_way'] == 1]['imageUrl'].unique()
gol_team1 = df_tiros[(df_tiros['eventType'] == 'Goal') & (df_tiros['home_way'] == 1)]
no_gol_team1 = df_tiros[df_tiros['eventType'] != 'Goal'][df_tiros.home_way == 1]

logo_team2 = df_tiros[df_tiros['home_way'] == 2]['imageUrl'].unique()
gol_team2 = df_tiros[(df_tiros['eventType'] == 'Goal') & (df_tiros['home_way'] == 2)]
no_gol_team2 = df_tiros[df_tiros['eventType'] != 'Goal']

fig, ax = plt.subplots(figsize = (14,7))
pitch = Pitch(pitch_type='custom',pitch_length=105, pitch_width=68)
pitch.draw(ax=ax)

pitch.scatter(105 - gol_team1.x, 68 - gol_team1.y, ax=ax, marker='football')
pitch.scatter(105 - no_gol_team1.x, 68 - no_gol_team1.y, ax=ax, alpha = 0.6)
pitch.scatter(gol_team2.x, gol_team2.y, ax=ax, marker='football')
pitch.scatter(no_gol_team2.x, no_gol_team2.y, ax=ax, alpha = 0.6)

#pitch.scatter(gol_team2.x, no_gol_team2.y, ax=ax, alpha=.6)

logo_team1_url = urllib.request.urlretrieve(logo_team1[0], "images/"+ df_teams.iloc[0, 0]+".png")
logo_team1_url =  df_teams.iloc[0, 0]+".png"
img = PIL.Image.open("images/" + logo_team1_url)
# Mostrar el logo del equipo 1 en el gráfico
ax.imshow(img, extent=[0, 20, 0, 20], alpha=0.5)  

logo_team2_url = urllib.request.urlretrieve(logo_team2[0], "images/"+ df_teams.iloc[1, 0]+".png")
logo_team2_url =  df_teams.iloc[1, 0]+".png"
img2 = PIL.Image.open("images/" + logo_team2_url)
# Mostrar el logo del equipo 1 en el gráfico
ax.imshow(img2, extent=[80, 100, 0, 20], alpha=0.5)

plt.show()

# how deploy 
```

# Page 2

